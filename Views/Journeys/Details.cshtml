@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> userManager
@model TrainReservation.Models.Journey

@{
    ViewData["Title"] = "Book your next yourney";

    var submittionNotAllowed = false; 

    // Check if user has already submitted the booking request 
    // Not very efficient but it works 
    foreach (var booking in @Model.Bookings) {
        if (booking.UserID == @userManager.GetUserId(User)) {
            submittionNotAllowed = true;
        }
    }

    // Number of passengers already booked for the journey.
    int totalPassengers = 0; 

    // Check each passengers number for each booking.
    // Sum them up into the `totalPassengers` var.
    foreach (Booking b in @Model.Bookings) {
        totalPassengers = totalPassengers + b.Passengers;
    }

    // Calculate the remaning capacity for a given journey.
    // In case that a specific train supports 32 passengers (which defines
    // its capacity), the capacity will be subtracted by the total number 
    // of passengers that are already booked. 
    int remainingCapacity = Model.Train.Capacity - totalPassengers - 1;
}

@section scripts {
    <script>
        // Show the current number of passengers selected by the user 
        let PassengersNumberLabel = $('.passengers__number');

        // Hidden value assigned to the Passengers form control.
        // Required in order to be sent in the back-end. 
        let PassengersNumberInput =  $('.passengers__number--input');

        // Provides functions that increment/decrement the passengers value
        // in the `PassengersNumberLabel` and `PassengersNumberInput`
        function PassengersControllers(Capacity) {

            let MinusButton = $('.passengers__number--minus'); // +
            let PlusButton  = $('.passengers__number--plus');  // - 

            let Passengers  = parseInt(PassengersNumberInput.val());
            
            MinusButton.on('click', function () {
                // Decrement only when Passengers is not 1
                if (Passengers > 1) {
                    Passengers -= 1;

                    SetPassengers(Passengers, Capacity);
                }
            }); // </MinusButton>

            // TODO: Find the meaning of this shit
            // CapacityPlusOne = parseInt(Capacity) + 1;

            PlusButton.on('click', function () {

                if (Passengers <= Capacity) {
                    Passengers += 1;
                    SetPassengers(Passengers, Capacity);
                }
            }); // </PlusButton>
        }

        // Assign passengers number into `PassengersNumberLabel` and
        // `PassengersNumberInput`. Update the price of booking and the
        // remaing capacity of the train. 
        function SetPassengers(Passengers, Capacity) {

            PassengersNumberLabel.text(Passengers);
            PassengersNumberInput.val(Passengers);

            // Remaining capacity
            // It is defined as a subtraction of train capacity 
            // and passengers determined by the user who is booking 
            // the journey including that user (+ 1).  
            Capacity = Capacity - Passengers + 1;
            
            if (Capacity < 0) Capacity = 0;

            // Remaining capacity: output
            $('#capacity').text("(" + Capacity + ")");

            // Price: output
            $('#price').text("$" + @Model.Price * Passengers);
        }

        // Watch if reserve seats checkbox is checked, and if so, 
        // show seats reservation panel and add the additional price. 
        function WatchReserveSeatsCheckbox() {
            let ReserveSeatsCheckbox = $('#reserveSeatsCheckbox')
            let PriceContainer = $('#price');
            let SeatsReservationPanel = $('.seats-reservation');

            ReserveSeatsCheckbox.on('click', function() { 
                let Price = parseInt(PriceContainer.text().replace("$", ""));

                if (ReserveSeatsCheckbox.is(':checked')) {
                    SeatsReservationPanel.fadeIn(330);
                    PriceContainer.text("$" + (Price + 5));
                } else {
                    SeatsReservationPanel.fadeOut(330);
                    PriceContainer.text("$" + (Price - 5));
                }
            }); // </ReserveSeatsCheckbox>
        }

        (function () {
            let Capacity = $('#capacity').text().replace('(', '').replace(')', '');

            PassengersControllers(Capacity);
            WatchReserveSeatsCheckbox();
        })();
    </script>
}

<div class="row mb-4">
    <div class="col-md-7">

        <!-- Booking section starts here -->
        <div class="card">
            <div class="card-body">

                <!-- <Booking details> -->
                <h3>
                    <strong>@Model.Departure - @Model.Destination</strong>
                    <span class="badge badge-success" id="price">$@Model.Price</span>
                </h3>
                <p>@Model.DepartureTime - @Model.ArrivalTime</p>
                <p class="mb-0"><i class="fas fa-train"></i> @Model.Train.Name</p>
                <!-- </Booking details> -->
                
                <!-- <Booking form> -->
                <form asp-action="BookJourney" asp-controller="Bookings">

                    <!-- <Booking form: Passengers> -->
                    <div class="passengers">
                        <div for="Passengers" class="passengers__title">
                            <i class="fas fa-users"></i> How many passengers?
                        </div>

                        <div class="passengers__control">
                            <div class="passengers__number--minus"><span class="minus">-</span></div>
                            <div class="passengers__number">1</div>
                            <div class="passengers__number--plus"><span class="plus">+</span></div>
                        </div>

                        <div class="passengers__max">
                            <small id="capacity">(@remainingCapacity)</small>
                        </div>
                    </div>
                     <!-- </Booking form: Passengers> -->

                    @if (@Model.AllowSeatReservation) {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="reserveSeatsCheckbox">
                        <label class="form-check-label" for="reserveSeatsCheckbox">
                            Do you want to reserve seats? <br>
                            <small>Extra <strong>5$</strong> will be charged.</small>
                        </label>
                    </div>
                    
                    
                    }
                    <br><br><br>

                    <input type="text" name="SeatsReceived" value="3,7,8" />

                    <hr>

                    <input type="number" name="Passengers" class="passengers__number--input" min="1" max="@remainingCapacity" value="1" hidden />
                    <input type="hidden" name="JourneyID" value="@Model.JourneyID" />
                    <input type="hidden" name="UserID" value="@userManager.GetUserId(User)" />

                    <input type="submit" value="Book" class="btn btn-sm btn-dark" disabled="@submittionNotAllowed">

                    <a class="btn btn-sm btn-light ml-2" href="/home">Travel</a> 
                </form>
                <!-- </Booking form> -->

            </div> <!-- </card-body> -->
        </div> <!-- </card> -->

    </div> <!-- </col> -->
    <!-- Booking section ends here -->

    <!-- Seat(s) reservation section starts here -->
    @if (@Model.AllowSeatReservation) {
    <div class="col-md-5">
        <div class="seats-reservation card">
            <div class="card-body">
                <h4>Select your seat(s)</h4>
                <p>If you do not select any seat the system will automatically select for you.</p>

                
            </div>
        </div> 
    </div>
    }
    <!-- Seat(s) reservation section ends here -->


</div> <!-- </row> -->